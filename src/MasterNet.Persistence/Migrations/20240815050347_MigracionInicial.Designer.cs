// <auto-generated />
using System;
using MasterNet.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MasterNet.Persistence.Migrations
{
    [DbContext(typeof(MasterNetDbContext))]
    [Migration("20240815050347_MigracionInicial")]
    partial class MigracionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("MasterNet.Domain.Calificacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Alumno")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comentario")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Puntaje")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("calificaciones", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("cursos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b51c35db-d7c9-4455-af95-b91f9c455f82"),
                            Descripcion = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            FechaPublicacion = new DateTime(2024, 8, 15, 5, 3, 46, 776, DateTimeKind.Utc).AddTicks(2479),
                            Titulo = "Gorgeous Cotton Hat"
                        },
                        new
                        {
                            Id = new Guid("43827640-1fa0-462b-ac6a-f5bdb506ea4b"),
                            Descripcion = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            FechaPublicacion = new DateTime(2024, 8, 15, 5, 3, 46, 776, DateTimeKind.Utc).AddTicks(2505),
                            Titulo = "Awesome Granite Ball"
                        },
                        new
                        {
                            Id = new Guid("de1f1d8f-9554-443b-add3-3ebd9739a3a2"),
                            Descripcion = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            FechaPublicacion = new DateTime(2024, 8, 15, 5, 3, 46, 776, DateTimeKind.Utc).AddTicks(2521),
                            Titulo = "Incredible Plastic Shoes"
                        },
                        new
                        {
                            Id = new Guid("b612ccc6-3c42-4709-8048-d0ac796ca733"),
                            Descripcion = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            FechaPublicacion = new DateTime(2024, 8, 15, 5, 3, 46, 776, DateTimeKind.Utc).AddTicks(2533),
                            Titulo = "Ergonomic Cotton Hat"
                        },
                        new
                        {
                            Id = new Guid("fb195683-889b-4530-8486-8f72b13c2e9a"),
                            Descripcion = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            FechaPublicacion = new DateTime(2024, 8, 15, 5, 3, 46, 776, DateTimeKind.Utc).AddTicks(2544),
                            Titulo = "Awesome Wooden Hat"
                        },
                        new
                        {
                            Id = new Guid("e3e371a9-b5f5-45bb-b0cf-c22c96c75a57"),
                            Descripcion = "The Football Is Good For Training And Recreational Purposes",
                            FechaPublicacion = new DateTime(2024, 8, 15, 5, 3, 46, 776, DateTimeKind.Utc).AddTicks(2566),
                            Titulo = "Tasty Soft Table"
                        },
                        new
                        {
                            Id = new Guid("887583e3-0234-4287-8f3c-aabf8a8d0bfa"),
                            Descripcion = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            FechaPublicacion = new DateTime(2024, 8, 15, 5, 3, 46, 776, DateTimeKind.Utc).AddTicks(2701),
                            Titulo = "Practical Fresh Bike"
                        },
                        new
                        {
                            Id = new Guid("9eaf2472-d798-418b-b118-c4153f2e2c85"),
                            Descripcion = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            FechaPublicacion = new DateTime(2024, 8, 15, 5, 3, 46, 776, DateTimeKind.Utc).AddTicks(2716),
                            Titulo = "Awesome Concrete Pants"
                        },
                        new
                        {
                            Id = new Guid("93c60a5c-a6d2-4af5-a0a4-c8e364445734"),
                            Descripcion = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            FechaPublicacion = new DateTime(2024, 8, 15, 5, 3, 46, 776, DateTimeKind.Utc).AddTicks(2728),
                            Titulo = "Tasty Soft Fish"
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.CursoInstructor", b =>
                {
                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("InstructorId")
                        .HasColumnType("TEXT");

                    b.HasKey("CursoId", "InstructorId");

                    b.HasIndex("InstructorId");

                    b.ToTable("cursos_instructores", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.CursoPrecio", b =>
                {
                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PrecioId")
                        .HasColumnType("TEXT");

                    b.HasKey("CursoId", "PrecioId");

                    b.HasIndex("PrecioId");

                    b.ToTable("cursos_precios", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Instructor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Apeliidos")
                        .HasColumnType("TEXT");

                    b.Property<string>("Grado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("instructores", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d5772c7b-533d-48dd-b70d-c14bb1593407"),
                            Apeliidos = "Braun",
                            Grado = "Legacy Research Analyst",
                            Nombre = "Lillie Ebert"
                        },
                        new
                        {
                            Id = new Guid("46b312d0-c872-42e8-ae99-9d2b818cc2b3"),
                            Apeliidos = "Dare",
                            Grado = "National Marketing Facilitator",
                            Nombre = "Mable Robel"
                        },
                        new
                        {
                            Id = new Guid("bc5d9efe-89ef-4471-ab0a-304b248896c3"),
                            Apeliidos = "Schneider",
                            Grado = "Dynamic Functionality Director",
                            Nombre = "Gretchen Denesik"
                        },
                        new
                        {
                            Id = new Guid("e1977c9d-aea4-4f3b-a239-f3a4737ced13"),
                            Apeliidos = "Jaskolski",
                            Grado = "Corporate Interactions Manager",
                            Nombre = "Mittie Wehner"
                        },
                        new
                        {
                            Id = new Guid("54cf8971-6b4d-4a3e-840c-84fea29843d2"),
                            Apeliidos = "Lebsack",
                            Grado = "International Interactions Facilitator",
                            Nombre = "Haylie Ebert"
                        },
                        new
                        {
                            Id = new Guid("db40ef63-e935-4a82-8c86-4677d1548015"),
                            Apeliidos = "Halvorson",
                            Grado = "Dynamic Intranet Director",
                            Nombre = "Cecilia Kreiger"
                        },
                        new
                        {
                            Id = new Guid("2dd7269f-9c58-41e6-9869-2e97f873b482"),
                            Apeliidos = "White",
                            Grado = "Corporate Infrastructure Planner",
                            Nombre = "Rosalinda Bauch"
                        },
                        new
                        {
                            Id = new Guid("e2d5390a-d015-48e5-bed1-26f0f7448a4f"),
                            Apeliidos = "Lakin",
                            Grado = "Central Identity Orchestrator",
                            Nombre = "Victor Gorczany"
                        },
                        new
                        {
                            Id = new Guid("9a8fd4df-6341-4f2e-bc03-48ca5b1b957c"),
                            Apeliidos = "Botsford",
                            Grado = "Future Applications Director",
                            Nombre = "Serenity Lesch"
                        },
                        new
                        {
                            Id = new Guid("87b664f4-c2b4-4c11-ba13-722623720e8e"),
                            Apeliidos = "Orn",
                            Grado = "Human Intranet Representative",
                            Nombre = "Clark Schoen"
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.Photo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("imagenes", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Precio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal>("PrecioActual")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecioPromocion")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("precios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("aa8d523a-bdaf-43a0-99e9-73ea0ce35b93"),
                            Nombre = "Precio regular",
                            PrecioActual = 10.0m,
                            PrecioPromocion = 8.0m
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.Calificacion", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("Calificaciones")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("MasterNet.Domain.CursoInstructor", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("CursoInstructores")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterNet.Domain.Instructor", "Instructor")
                        .WithMany("CursoInstructores")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("MasterNet.Domain.CursoPrecio", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterNet.Domain.Precio", "Precio")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("PrecioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Precio");
                });

            modelBuilder.Entity("MasterNet.Domain.Photo", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("Photos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("MasterNet.Domain.Curso", b =>
                {
                    b.Navigation("Calificaciones");

                    b.Navigation("CursoInstructores");

                    b.Navigation("CursoPrecios");

                    b.Navigation("Photos");
                });

            modelBuilder.Entity("MasterNet.Domain.Instructor", b =>
                {
                    b.Navigation("CursoInstructores");
                });

            modelBuilder.Entity("MasterNet.Domain.Precio", b =>
                {
                    b.Navigation("CursoPrecios");
                });
#pragma warning restore 612, 618
        }
    }
}
